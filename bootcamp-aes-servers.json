{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"AES Logging Solution - Frontend Servers.  **Attention** This template creates AWS resources that will incur charges on your account.",
    "Parameters":{
        "NetworkStackName": {
            "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
            "Type": "String"
        },
        "RedisEndpoint": {
            "Description": "Name of Redis endpoint.",
            "Type": "String"
	},
        "RedisEndpointPort": {
            "Description": "Redis endpoint port.",
            "Type": "Number"
    },
    "ElasticsearchEndpoint": {
        "Description": "Endpoint of your Amazon Elasticsearch Domain.",
        "Type": "String"
    },		
        "OperatorEMail":{
            "Description":"EMail address to notify if there are any scaling operations",
            "Type":"String",
            "AllowedPattern":"([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription":"must be a valid email address."
        },
        "KeyName":{
            "Description":"The EC2 Key Pair to allow SSH access to all the instances for this solution",
            "Type":"AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription":"must be the name of an existing EC2 KeyPair."
        }
    },
    "Mappings":{
	"AWSEC2AMI":{
            "us-east-1":{"AmiId":"ami-428aa838"},
            "us-east-2":{"AmiId":"ami-710e2414"},
            "us-west-1":{"AmiId":"ami-4a787a2a"},
            "us-west-2":{"AmiId":"ami-7f43f307"},
            "ap-south-1":{"AmiId":"ami-3b2f7954"},
            "ap-northeast-2":{"AmiId":"ami-3e04a450"},
            "ap-southeast-1":{"AmiId":"ami-4f89f533"},
            "ap-southeast-2":{"AmiId":"ami-38708c5a"},
            "ap-northeast-1":{"AmiId":"ami-c2680fa4"},
            "ca-central-1":{"AmiId":"ami-7549cc11"},
            "eu-central-1":{"AmiId":"ami-1b2bb774"},
            "eu-west-1":{"AmiId":"ami-db1688a2"},
            "eu-west-2":{"AmiId":"ami-6d263d09"},
            "eu-west-3":{"AmiId":"ami-5ce55321"},
            "sa-east-1":{"AmiId":"ami-f1337e9d"}
	}
    },
    "Resources":{
        "NotificationTopic":{
            "Type":"AWS::SNS::Topic",
            "Properties":{
                "Subscription":[
                    {
                        "Endpoint":{
                            "Ref":"OperatorEMail"
                        },
                        "Protocol":"email"
                    }
                ]
            }
        },
        "WebServerGroup":{
            "Type":"AWS::AutoScaling::AutoScalingGroup",
            "Properties":{
                "VPCZoneIdentifier":[ { "Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-PrivateSubnetApp0"}}, { "Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-PrivateSubnetApp1"}}],
                "LaunchConfigurationName":{
                    "Ref":"LaunchConfig"
                },
                "MinSize":"1",
                "MaxSize":"2",
                "TargetGroupARNs":[
                    {
                        "Ref":"ALBTargetGroup"
                    }
                ],
                "Tags":[
		    {"Key": "Name","Value": {"Fn::Join": ["",[{"Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-EnvTag"}},"-web-servers-filebeat"]]},"PropagateAtLaunch":"true"}
                ],		
                "NotificationConfiguration":{
                    "TopicARN":{
                        "Ref":"NotificationTopic"
                    },
                    "NotificationTypes":[
                        "autoscaling:EC2_INSTANCE_LAUNCH",
                        "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                        "autoscaling:EC2_INSTANCE_TERMINATE",
                        "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
                    ]
                }
            },
            "CreationPolicy":{
                "ResourceSignal":{
                    "Timeout":"PT15M",
                    "Count":"1"
                }
            },
            "UpdatePolicy":{
                "AutoScalingRollingUpdate":{
                    "MinInstancesInService":"1",
                    "MaxBatchSize":"1",
                    "PauseTime":"PT15M",
                    "WaitOnResourceSignals":"true"
                }
            }
        },
        "LaunchConfig":{
            "Type":"AWS::AutoScaling::LaunchConfiguration",
            "Metadata":{
                "Comment":"Install a simple application",
                "AWS::CloudFormation::Init":{
		    "configSets":{
		        "default":["filebeat","therest"]
		    },   
                    "filebeat":{
		        "files":{
			    "/etc/yum.repos.d/elastic.repo":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
					    "[elastic-5.x]\n",
					    "name=Elastic repository for 5.x packages\n",
					    "baseurl=https://artifacts.elastic.co/packages/5.x/yum\n",
					    "gpgcheck=1\n",
					    "gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch\n",
					    "enabled=1\n",
					    "autorefresh=1\n",
					    "type=rpm-md\n"
                                        ]
                                    ]
                                },
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
			    },
			    "/var/www/html/imdb/composer.json":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
					    "{\n",
					    "    \"require\" : {\n",
					    "        \"elasticsearch/elasticsearch\":\"~5.0\"\n",
					    "    }\n",
					    "}\n"
					]
				    ]         
                                },
                                "mode":"000600",
                                "owner":"root",
                                "group":"root"
			    },
			    "/var/www/html/imdb/composerinstall":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
					    "export COMPOSER_HOME=/root\n",
					    "php -r \"copy('https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/packages/installer', 'composer-setup.php');\"\n",
					    "php composer-setup.php --no-dev\n",
					    "php -r \"unlink('composer-setup.php');\"\n",
			                    "php composer.phar install --no-dev\n"
					]
				    ]         
                                },
                                "mode":"000777",
                                "owner":"root",
                                "group":"root"
			    },
			    "/var/www/html/imdb/imgs.tgz":{
                                "source" : "https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/packages/imgs.tgz",
                                "mode":"000644",
                                "owner":"root",                                                          
                                "group":"root"
                            },
			    "/var/www/html/imdb/index.php":{
                                "source" : "https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/configs/index.php",
                                "mode":"000644",
                                "owner":"root",                                                          
                                "group":"root"
                            }			    			    
			},
			"commands":{
                            "a_unzip_imdb" : {
                                "command" : "tar -xzf imgs.tgz --no-same-owner --no-same-permissions",
                                "ignoreErrors" : "false",
				"cwd" : "/var/www/html/imdb"
                            },
                            "b_install_composer" : {
			        "command" : "./composerinstall",
                                "ignoreErrors" : "false",
				"cwd" : "/var/www/html/imdb"
			    },
                            "c_remove_composer_installer" : {
			        "command" : "rm -f composerinstall",
                                "ignoreErrors" : "false",
				"cwd" : "/var/www/html/imdb"
			    },
                            "d_replace_domain_placeholder" : {
			        "command" : {
				    "Fn::Join":[
                                        "",
                                        [
					    "var=$(echo ",
					    {"Ref":"ElasticsearchEndpoint"},
					    " | sed 's/https:\\/\\///' | sed 's/\\///'); sed -i \"s/AES_CLUSTUH/$var/\" index.php"
		       		    	]
				    ]         
                                },
                                "ignoreErrors" : "false",
				"cwd" : "/var/www/html/imdb"
			    }
			}
		    },
                    "therest":{
                        "packages":{
                            "yum":{
			    	            "httpd":[],
                                "filebeat":[],
                                "metricbeat":[]
                            }
                        },
                        "files":{
			    "/var/www/html/index.html":{
                                "source" : "https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/html/index.html",
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },			
                            "/etc/httpd/conf/httpd.conf":{
                                "source" : "https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/configs/httpd.conf",
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
			    "/etc/httpd/conf.d/virtualhosts.conf":{
                                "source" : "https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/configs/virtualhosts.conf",
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
			    },
			    "/etc/filebeat/filebeat.yml":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                        "filebeat.prospectors:\n",
                                            "  - input_type: log\n",
                                            "    paths:\n",
                                            "      - /var/log/httpd/20*-*/*\n",
                                            "    symlinks: true\n",
                                            "output.redis:\n",
                                            "  hosts: [\"",
                                            { "Ref" : "RedisEndpoint" },
                                            ":",
                                            { "Ref" : "RedisEndpointPort" },
                                            "\"]\n",
                                            "  key: \"filebeat\"\n",
                                            "  db: 0\n",
                                            "  timeout: 5\n",
                                            "logging.to_syslog: true\n"	
                                        ]
				                    ]         
                                },
                                "mode":"000600",
                                "owner":"root",
                                "group":"root"
                },
                "/etc/metricbeat/metricbeat.yml":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                            "metricbeat.modules:\n",
                                            "- module: system\n",
                                            "  metricsets:\n",
                                            "    - cpu\n",
                                            "    - load\n",
                                            "    - filesystem\n",
                                            "    - fsstat\n",
                                            "    - memory\n",
                                            "    - network\n",
                                            "    - process\n",
                                            "  enabled: true\n",
                                            "  period: 10s\n",
                                            "  processes: ['.*']\n",
                                            "- module: apache\n",
                                            "  metricsets: [\"status\"]\n",
                                            "  enabled: true\n",
                                            "  period: 10s\n",
                                            "  hosts: [\"http://127.0.0.1\"]\n",
                                            "name: \"webserver\"\n",
                                            "output.elasticsearch:\n",
                                            "  hosts: [\"",
                                            { "Ref" : "ElasticsearchEndpoint" },
                                            ":443",
                                            "\"]\n",
                                            "  protocol: \"https\"\n",
                                            "logging.to_syslog: true\n"	
                                        ]
                                    ]         
                                },
                                "mode":"000600",
                                "owner":"root",
                                "group":"root"
                    },    
                            "/etc/cfn/cfn-hup.conf":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref":"AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref":"AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode":"000400",
                                "owner":"root",
                                "group":"root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref":"AWS::StackName"
                                            },
                                            "         --resource LaunchConfig ",
                                            "         --region ",
                                            {
                                                "Ref":"AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                },
                                "mode":"000400",
                                "owner":"root",
                                "group":"root"
                            }
                        },
                        "services":{
                            "sysvinit":{
                                "httpd":{
                                    "enabled":"true",
                                    "ensureRunning":"true"
                                },
				                "filebeat":{
                                    "enabled":"true",
                                    "ensureRunning":"true"
                                },
                                "metricbeat":{
                                    "enabled":"true",
                                    "ensureRunning":"true"
				                },
                                "cfn-hup":{
                                    "enabled":"true",
                                    "ensureRunning":"true",
                                    "files":[
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties":{
                "KeyName" : {"Ref" : "KeyName"},
                "ImageId":{
                    "Fn::FindInMap":[
                        "AWSEC2AMI",
                        {
                            "Ref":"AWS::Region"
                        },
			"AmiId"
                    ]
                },
                "SecurityGroups":[
                    {
                        "Ref":"WebServersInstanceSecurityGroup"
                    }
                ],
                "InstanceType":"t2.small",
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "yum update -y aws-cli\n",
				"amazon-linux-extras install php7.2\n",
                                "rpm -ivh https://s3-us-east-2.amazonaws.com/search-sa-log-solutions/logstash/packages/cronolog-1.6.2-23.fc27.x86_64.rpm\n",
				"rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch\n",
                                "/opt/aws/bin/cfn-init -c default -v ",
                                "         --stack ",
                                {
                                    "Ref":"AWS::StackName"
                                },
                                "         --resource LaunchConfig ",
                                "         --region ",
                                {
                                    "Ref":"AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref":"AWS::StackName"
                                },
                                "         --resource WebServerGroup ",
                                "         --region ",
                                {
                                    "Ref":"AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerScaleUpPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{
                    "Ref":"WebServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"1"
            }
        },
        "WebServerScaleDownPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{
                    "Ref":"WebServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"-1"
            }
        },
        "CPUAlarmHigh":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmDescription":"Scale-up if CPU > 90% for 10 minutes",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"300",
                "EvaluationPeriods":"2",
                "Threshold":"90",
                "AlarmActions":[
                    {
                        "Ref":"WebServerScaleUpPolicy"
                    }
                ],
                "Dimensions":[
                    {
                        "Name":"AutoScalingGroupName",
                        "Value":{
                            "Ref":"WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"GreaterThanThreshold"
            }
        },
        "CPUAlarmLow":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"300",
                "EvaluationPeriods":"2",
                "Threshold":"70",
                "AlarmActions":[
                    {
                        "Ref":"WebServerScaleDownPolicy"
                    }
                ],
                "Dimensions":[
                    {
                        "Name":"AutoScalingGroupName",
                        "Value":{
                            "Ref":"WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"LessThanThreshold"
            }
        },
        "ALBSecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"Enable inbound to ALB",
                "SecurityGroupIngress":[
                    {
                        "IpProtocol":"tcp",
                        "FromPort":"80",
                        "ToPort":"80",
                        "CidrIp":"0.0.0.0/0"
                    }
                ],
                "VpcId":{"Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-VPCID"}}
            }
        },
        "ApplicationLoadBalancer":{
            "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties":{
                "Subnets":[ { "Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-PublicSubnet0"}}, { "Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-PublicSubnet1"}}],
		"SecurityGroups": [{"Ref": "ALBSecurityGroup"}]
            }
        },
        "ALBListener":{
            "Type":"AWS::ElasticLoadBalancingV2::Listener",
            "Properties":{
                "DefaultActions":[
                    {
                        "Type":"forward",
                        "TargetGroupArn":{
                            "Ref":"ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn":{
                    "Ref":"ApplicationLoadBalancer"
                },
                "Port":"80",
                "Protocol":"HTTP"
            }
        },
        "ALBTargetGroup":{
            "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties":{
                "HealthCheckIntervalSeconds":30,
                "HealthCheckTimeoutSeconds":5,
                "HealthyThresholdCount":3,
                "Port":80,
                "Protocol":"HTTP",
                "UnhealthyThresholdCount":5,
		"VpcId":{ "Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-VPCID"}}
		
            }
        },
        "WebServersInstanceSecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"Enable SSH access and HTTP from the load balancer only",
                "SecurityGroupIngress":[
                    {
                        "IpProtocol":"tcp",
                        "FromPort":"22",
                        "ToPort":"22",
                        "CidrIp":{"Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-VPCCIDRBlock"}}
                    },
                    {
                        "IpProtocol":"tcp",
                        "FromPort":"80",
                        "ToPort":"80",
                        "SourceSecurityGroupId":{
                            "Fn::Select":[
                                0,
                                {
                                    "Fn::GetAtt":[
                                        "ApplicationLoadBalancer",
                                        "SecurityGroups"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "VpcId":{"Fn::ImportValue" : {"Fn::Sub": "${NetworkStackName}-VPCID"}}
            }
        }
    },
    "Outputs":{
        "URL":{
            "Description":"The URL of the website",
            "Value":{
                "Fn::Join":[
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt":[
                                "ApplicationLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    }
}
